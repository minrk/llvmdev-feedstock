From 11686c98e881fb41c5933af354db334ac43c3eed Mon Sep 17 00:00:00 2001
From: Axel Naumann <Axel.Naumann@cern.ch>
Date: Wed, 18 May 2016 16:15:36 +0200
Subject: [PATCH 7/9] Weak undefined symbols should not trigger the emission of
 a weak symbol.

---
 lib/ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/lib/ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp b/lib/ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp
index 5154c6a..933cb8c 100644
--- a/lib/ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp
+++ b/lib/ExecutionEngine/RuntimeDyld/RuntimeDyld.cpp
@@ -214,7 +214,10 @@ RuntimeDyldImpl::loadObjectImpl(const object::ObjectFile &Obj) {
 
     if (Flags & SymbolRef::SF_Common)
       CommonSymbols.push_back(*I);
-    else if (Flags & SymbolRef::SF_Weak) {
+    else if ((Flags & SymbolRef::SF_Weak)
+             && !(Flags & SymbolRef::SF_Undefined)) {
+      // Weak *undefined* symbols are not in any section.
+      // Treat them as ordinary symbols below.
       ErrorOr<section_iterator> SIOrErr = I->getSection();
       Check(SIOrErr.getError());
       section_iterator SI = *SIOrErr;
-- 
2.6.0

